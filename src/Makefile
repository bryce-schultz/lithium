# Makefile auto generated by mk 2.0
#
# Targets:
# - main

# Compiler Options:
CXXC = g++
CC = gcc
CXXFLAGS = -Wall -Wextra -pedantic
CFLAGS = -Wall -Wextra -pedantic
LDFLAGS = -lm

# Target Executables:
MAIN_EXE = main

# Object Files:
MAIN_OBJS = main.o \
 Parser.o \
 Tokenizer.o \
 Token.o \
 Range.o \
 Location.o \
 FileCache.o \
 Node.o \
 Visitor.o \
 StatementsNode.o \
 BinaryExpressionNode.o \
 VarExprNode.o \
 VarDeclNode.o \
 PrintStatementNode.o \
 ArgListNode.o \
 NumberNode.o \
 CallNode.o \
 OpNode.o \
 XmlVisitor.o

# Phony Targets:
.PHONY: all clean

# All Targets:
all: $(MAIN_EXE)

# Targets:
$(MAIN_EXE): $(MAIN_OBJS)
	$(CXXC) $(CXXFLAGS) $(MAIN_OBJS) -o $(MAIN_EXE) $(LDFLAGS)

# Clean:
clean:
	rm -f $(MAIN_EXE) $(MAIN_OBJS)

# Rules:
.cpp.o:
	$(CXXC) $(CXXFLAGS) -c $< -o $@
.c.o:
	$(CC) $(CFLAGS) -c $< -o $@

# Dependencies:
FileCache.o: FileCache.cpp FileCache.h
Location.o: Location.cpp Location.h FileCache.h
Visitor.o: Visitor.cpp Visitor.h Nodes.h Node.h Range.h Location.h \
 FileCache.h StatementNode.h StatementsNode.h ExpressionNode.h \
 BinaryExpressionNode.h Token.h ReturnStatementNode.h VarExprNode.h \
 VarDeclNode.h PrintStatementNode.h ArgListNode.h NumberNode.h CallNode.h \
 OpNode.h XmlVisitor.h
ArgListNode.o: ArgListNode.cpp ArgListNode.h ExpressionNode.h \
 StatementNode.h Node.h Range.h Location.h FileCache.h Visitor.h
Tokenizer.o: Tokenizer.cpp Tokenizer.h Token.h Range.h Location.h \
 FileCache.h
NumberNode.o: NumberNode.cpp NumberNode.h ExpressionNode.h \
 StatementNode.h Node.h Range.h Location.h FileCache.h Visitor.h Token.h
Range.o: Range.cpp Range.h Location.h FileCache.h
Node.o: Node.cpp Node.h Range.h Location.h FileCache.h Visitor.h
main.o: main.cpp Parser.h Tokenizer.h Token.h Range.h Location.h \
 FileCache.h Nodes.h Node.h Visitor.h StatementNode.h StatementsNode.h \
 ExpressionNode.h BinaryExpressionNode.h ReturnStatementNode.h \
 VarExprNode.h VarDeclNode.h PrintStatementNode.h ArgListNode.h \
 NumberNode.h CallNode.h OpNode.h XmlVisitor.h
StatementsNode.o: StatementsNode.cpp StatementsNode.h Node.h Range.h \
 Location.h FileCache.h Visitor.h StatementNode.h
OpNode.o: OpNode.cpp OpNode.h Node.h Range.h Location.h FileCache.h \
 Visitor.h Token.h
CallNode.o: CallNode.cpp CallNode.h ArgListNode.h ExpressionNode.h \
 StatementNode.h Node.h Range.h Location.h FileCache.h Visitor.h
PrintStatementNode.o: PrintStatementNode.cpp PrintStatementNode.h \
 StatementNode.h Node.h Range.h Location.h FileCache.h Visitor.h \
 ExpressionNode.h
XmlVisitor.o: XmlVisitor.cpp XmlVisitor.h Visitor.h Nodes.h Node.h \
 Range.h Location.h FileCache.h StatementNode.h StatementsNode.h \
 ExpressionNode.h BinaryExpressionNode.h Token.h ReturnStatementNode.h \
 VarExprNode.h VarDeclNode.h PrintStatementNode.h ArgListNode.h \
 NumberNode.h CallNode.h OpNode.h
BinaryExpressionNode.o: BinaryExpressionNode.cpp BinaryExpressionNode.h \
 ExpressionNode.h StatementNode.h Node.h Range.h Location.h FileCache.h \
 Visitor.h Token.h
Error.o: Error.cpp Error.h Range.h Location.h FileCache.h
VarExprNode.o: VarExprNode.cpp VarExprNode.h ExpressionNode.h \
 StatementNode.h Node.h Range.h Location.h FileCache.h Visitor.h Token.h
Parser.o: Parser.cpp Parser.h Tokenizer.h Token.h Range.h Location.h \
 FileCache.h Nodes.h Node.h Visitor.h StatementNode.h StatementsNode.h \
 ExpressionNode.h BinaryExpressionNode.h ReturnStatementNode.h \
 VarExprNode.h VarDeclNode.h PrintStatementNode.h ArgListNode.h \
 NumberNode.h CallNode.h OpNode.h
VarDeclNode.o: VarDeclNode.cpp VarDeclNode.h StatementNode.h Node.h \
 Range.h Location.h FileCache.h Visitor.h Token.h ExpressionNode.h
Token.o: Token.cpp Token.h Range.h Location.h FileCache.h Node.h \
 Visitor.h

# Options from .mk file:
CXXFLAGS += -g -O0 -Wall -Wextra -Wpedantic -Werror

