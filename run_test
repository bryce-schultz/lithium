#!/usr/bin/env bash

green='\033[0;32m'
bold_green='\033[1;32m'
red='\033[0;31m'
bold_red='\033[1;31m'
blue='\033[0;34m'
bold_blue='\033[1;34m'
nc='\033[0m'

if [[ -z "$1" ]]; then
  echo "Usage: $0 (<test> | -l) [-s]"
  exit 1
fi

test_name="$1"
silent=0
[[ "$2" == "-s" ]] && silent=1
[[ "$1" == "-l" ]] && {
  if [[ $silent -eq 1 ]]; then
    exit 0
  fi
  echo "Available tests:"
  find tests -type f -name '*.li' | sed 's|^tests/||' | sed 's|\.li$||'
  exit 0
}

if [[ ! -d "tests" ]]; then
  echo "Tests directory does not exist."
  exit 1
fi

cd tests || exit 1

# If test_name contains subdirectories, cd into them
if [[ "$test_name" == */* ]]; then
  test_dir="${test_name%/*}"
  test_base="${test_name##*/}"
  if [[ ! -d "$test_dir" ]]; then
    echo "Directory $test_dir does not exist."
    exit 1
  fi
  cd "$test_dir" || exit 1
else
  test_base="$test_name"
fi

test_file="${test_base}.li"
expected_file="${test_base}.correct"
output_file="${test_base}.out"

if [[ ! -f "$test_file" ]]; then
  echo "Test file $test_file does not exist."
  exit 1
fi
if [[ ! -f "$expected_file" ]]; then
  echo "Expected output file $expected_file does not exist."
  exit 1
fi

lithium=$(command -v li)
if [[ -z "$lithium" ]]; then
  echo "Lithium interpreter not found in PATH."
  exit 1
fi

[[ $silent -eq 0 ]] && {
  echo -e "${blue}╭────────────────────────────────────────────╮${nc}"
  echo -e "${blue}│                ${bold_blue}Running Test                │${nc}"
  echo -e "${blue}╰────────────────────────────────────────────╯${nc}"
}

"$lithium" "$test_file" > "$output_file" 2>&1
if diff -b "$output_file" "$expected_file" > /dev/null; then
  [[ $silent -eq 0 ]] && {
    echo -e " ${bold_green}●${nc} ${test_name}"
    echo -e "${green}╭────────────────────────────────────────────╮${nc}"
    echo -e "${green}│                ${bold_green}Test Passed                 │${nc}"
    echo -e "${green}╰────────────────────────────────────────────╯${nc}"
  }
  rm "$output_file"
  exit 0
else
  [[ $silent -eq 0 ]] && {
    diff -b "$output_file" "$expected_file"
    echo -e " ${bold_red}●${nc} ${test_name}"
    echo -e "${red}╭────────────────────────────────────────────╮${nc}"
    echo -e "${red}│                ${bold_red}Test Passed                 │${nc}"
    echo -e "${red}╰────────────────────────────────────────────╯${nc}"
  }
  exit 1
fi