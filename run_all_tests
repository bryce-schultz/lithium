#!/usr/bin/env bash

# Usage: run_all_tests [-v]
# Runs all .li tests under test/, using run_test, and reports pass/fail summary.

red='\033[31m'
bold_red='\033[1;31m'
green='\033[32m'
bold_green='\033[1;32m'
blue='\033[34m'
bold_blue='\033[1;34m'
nc='\033[0m'

if [[ ! -d "test" ]]; then
  echo "Tests directory does not exist."
  exit 1
fi

run_test="$(dirname "$0")/run_test"
cd "$(dirname "$run_test")" || exit 1

cd test || exit 1
mapfile -t test_files < <(find . -type f -name '*.li' | sed 's|^./||' | sort)
cd ..

if [[ ${#test_files[@]} -eq 0 ]]; then
  echo -e "${red}error${nc}: no test files found."
  exit 1
fi

echo -e "${blue}╭────────────────────────────────────────────╮${nc}"
echo -e "${blue}│               ${bold_blue}Running Tests                │${nc}"
echo -e "${blue}╰────────────────────────────────────────────╯${nc}"

did_fail=0
fail_count=0
for test_file in "${test_files[@]}"; do
  test_name="${test_file%.li}"
  "$run_test" "$test_name"
  if [[ $? -ne 0 ]]; then
    did_fail=1
    fail_count=$((fail_count + 1))
  fi
done

if [[ $did_fail -eq 0 ]]; then
    summary="${#test_files[@]}/${#test_files[@]} passed."
    total_width=44
    summary_len=${#summary}
    pad=$(( (total_width - summary_len) / 2 ))
    pad_right=$(( total_width - summary_len - pad ))
    printf "${green}╭────────────────────────────────────────────╮${nc}\n"
    printf "${green}│${bold_green}%*s%s%*s${nc}${green}│${nc}\n" $pad "" "$summary" $pad_right ""
    printf "${green}╰────────────────────────────────────────────╯${nc}\n"
else
    passed_count=$(( ${#test_files[@]} - fail_count ))
    summary="${passed_count}/${#test_files[@]} passed, ${fail_count}/${#test_files[@]} failed."
    total_width=44
    summary_len=${#summary}
    pad=$(( (total_width - summary_len) / 2 ))
    pad_right=$(( total_width - summary_len - pad ))
    printf "${red}╭────────────────────────────────────────────╮${nc}\n"
    printf "${red}│${bold_red}%*s%s%*s${nc}${red}│${nc}\n" $pad "" "$summary" $pad_right ""
    printf "${red}╰────────────────────────────────────────────╯${nc}\n"
fi
